&НаСервере
Функция ВыгрузитьНоменклатура (мсвНоменклатура, флВыгружатьИзображения = Ложь) Экспорт
    Дата_Старт = ТекущаяДата();
    л_файл = СоздатьЛогФайл("Номенклатура");
    conn = ПолучитьПодключениеБД(л_файл);
    Если conn=Неопределено Тогда
        Возврат Ложь;
    КонецЕсли;
    УзелОбменаСайт = ПланыОбмена.ипСайт.НайтиПоКоду("002");
    СообщитьЛог("Старт:Выгрузка номенклатуры. "+Строка (мсвНоменклатура.Количество())+" элементов", л_файл);
    // выгружаем категории
    // соберем всех родителей
    тзРодители = Новый ТаблицаЗначений;
    тзРодители.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
    тзРодители.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка"));
    тзРодители.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
    тзРодители.Колонки.Добавить("РодительКод", Новый ОписаниеТипов("Строка"));
    тзРодители.Колонки.Добавить("Уровень", Новый ОписаниеТипов("Число"));
    // будем получать родителей всех до тех пор пока не доберемся до верхнего уровня
    мсвНайденныеРодители = ПолучитьРодителей(мсвНоменклатура, тзРодители);
    Пока мсвНайденныеРодители.Количество()>0 Цикл
        мсвНайденныеРодители = ПолучитьРодителей(мсвНайденныеРодители, тзРодители);
    КонецЦикла;
    тзРодители.Свернуть ("Ссылка, Код, Наименование, РодительКод, Уровень");
    тзРодители.Сортировать("Уровень +");
    Для Каждого стр_тзРодители Из тзРодители Цикл
        category_id = 0;
        query = "SELECT category.category_id AS category_id, category.1c_id AS 1c_id, prnt.1c_id AS prnt_1c_id FROM category
        |LEFT JOIN category AS prnt on prnt.category_id = category.parent_id
        |WHERE category.1c_id='%1c_id%'";
        query = СтрЗаменить(query, "%1c_id%", стр_тзРодители.Код);
        rows = ВыполнитьЗапрос(query, conn, л_файл);
        Если rows=Неопределено Тогда
            СообщитьЛог("Ошибка поиска категории код:'"+стр_тзРодители.Код+"'", л_файл, СтатусСообщения.ОченьВажное);
            Возврат Ложь;
        КонецЕсли;
        category_id = ?(rows=0,-1, rows.Fields.Item("category_id").Value);
        Если category_id=-1 Тогда
            // запись не найдена
            соотвПоля = Новый Соответствие;
            соотвПоля.Вставить("1c_id", стр_тзРодители.Код);
            соотвПоля.Вставить("parent_id", "(SELECT category_id FROM category WHERE 1c_id='"+стр_тзРодители.РодительКод+"' LIMIT 1)");
            соотвПоля.Вставить("status", 1);
            rows = ВставитьВ("category", соотвПоля, conn, л_файл);
            Если rows=Неопределено Тогда
                СообщитьЛог("Ошибка вставки категории код:'"+стр_тзРодители.Код+"'", л_файл, СтатусСообщения.ОченьВажное);
                Возврат Ложь;
            КонецЕсли;
            // находим id новой записи
            мсвПоля = Новый Массив;мсвПоля.Добавить("category_id");
            соотвУсловия = Новый Соответствие;
            соотвУсловия.Вставить("1c_id", стр_тзРодители.Код);
            rows = ВыбратьИз("category", мсвПоля, соотвУсловия, conn, л_файл);
            Если rows=Неопределено Тогда
                СообщитьЛог("Ошибка поиска категории код:'"+стр_тзРодители.Код+"'", л_файл, СтатусСообщения.ОченьВажное);
                Возврат Ложь;
            КонецЕсли;
            category_id = ?(rows=0,-1, rows.Fields.Item("category_id").Value);
            Если category_id<1 Тогда
                СообщитьЛог("Ошибка, новая категория была запиана, но не найдена, код:'"+стр_тзРодители.Код+"'", л_файл, СтатусСообщения.ОченьВажное);
                Возврат Ложь;
            КонецЕсли;
            // добавим привязку для category_to_store
            соотвПоля = Новый Соответствие;
            соотвПоля.Вставить("category_id", category_id);
            соотвПоля.Вставить("store_id", 0);
            rows=ВставитьВ("category_to_store", соотвПоля, conn, л_файл);
            Если rows=Неопределено Тогда
                СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                Возврат Ложь;
            КонецЕсли;
        Иначе
            // запись существует, проверим нужно ли обновить иерархию
            prnt_1c_id = rows.Fields.Item("prnt_1c_id").Value;
            prnt_1c_id = ?(prnt_1c_id=Null, "", prnt_1c_id);
            Если prnt_1c_id<>стр_тзРодители.РодительКод Тогда
                // информация о родителе в MySQL устарела, обновляем
                мсвПоля = Новый Массив;
                мсвПоля.Добавить("category_id");
                соотвУсловия = Новый Соответствие;
                соотвУсловия.Вставить("1c_id", стр_тзРодители.РодительКод);
                rows = ВыбратьИз("category", мсвПоля, соотвУсловия, conn, л_файл);
                Если rows=Неопределено Тогда
                    СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                    Возврат Ложь;
                КонецЕсли;
                Если rows=0 Тогда
                    // нет записей с 1c_id = РодительКод, такого быть не должно
                    СообщитьЛог("нет записей с 1c_id = РодительКод", л_файл, СтатусСообщения.ОченьВажное);
                    Возврат Ложь;
                КонецЕсли;
                parent_id = rows.Fields.Item("category_id").Value;
                соотвПоля = Новый Соответствие;
                соотвПоля.Вставить("parent_id", parent_id);
                соотвУсловия = Новый Соответствие;
                соотвУсловия.Вставить("category_id", category_id);
                rows = ОбновитьТаблицу("category", соотвПоля, соотвУсловия, conn, л_файл);
                Если rows=Неопределено Тогда
                    СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                    Возврат Ложь;
                КонецЕсли;
            КонецЕсли;
        КонецЕсли;
        // обновим реквизиты категории
        Для language_id=1 По 2 Цикл
            мсвПоля = Новый Массив;
            мсвПоля.Добавить("category_id");
            мсвПоля.Добавить("description");
            соотвУсловия = Новый Соответствие;
            соотвУсловия.Вставить("category_id", category_id);
            соотвУсловия.Вставить("language_id", language_id);
            rows = ВыбратьИз("category_description", мсвПоля, соотвУсловия, conn, л_файл);
            Если rows=Неопределено Тогда
                СообщитьЛог("Ошибка поиска описания категории, category_id:'"+category_id+"'", л_файл, СтатусСообщения.ОченьВажное);
                Возврат Ложь;
            КонецЕсли;
            Если rows=0 Тогда
                // запись не найдена, создаем
                соотвПоля = Новый Соответствие;
                соотвПоля.Вставить("category_id",    category_id);
                соотвПоля.Вставить("language_id",    language_id);
                соотвПоля.Вставить("name",            стр_тзРодители.Наименование);
                соотвПоля.Вставить("description",    стр_тзРодители.Наименование);
                rows = ВставитьВ("category_description", соотвПоля, conn, л_файл);
                Если rows=Неопределено Тогда
                    СообщитьЛог("Ошибка вставки записи описания для категории, category_id:'"+category_id+"'", л_файл, СтатусСообщения.ОченьВажное);
                    Возврат Ложь;
                КонецЕсли;
            Иначе
                // обновляем запись, если поменялось наименование
                Если rows.Fields.Item("description").Value<>стр_тзРодители.Наименование Тогда
                    соотвПоля = Новый Соответствие;
                    соотвПоля.Вставить("name",            стр_тзРодители.Наименование);
                    соотвПоля.Вставить("description",    стр_тзРодители.Наименование);
                    соотвУсловия = Новый Соответствие;
                    соотвУсловия.Вставить("category_id", category_id);
                    соотвУсловия.Вставить("language_id", language_id);
                    rows = ОбновитьТаблицу("category_description", соотвПоля, соотвУсловия, conn, л_файл);
                    Если rows=Неопределено Тогда
                        СообщитьЛог("Ошибка обновления записи описания для категории, category_id:'"+category_id+"'", л_файл, СтатусСообщения.ОченьВажное);
                        Возврат Ложь;
                    КонецЕсли;
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;
    КонецЦикла;
    // выгружаем номенклатуру
    ИмяПапкиСерверDownload = "/download/";
    ИмяПапкиСерверImage = "/image/data/";
    ИмяПапкиСерверCache = "/system/cache/";

    тзФайлыККопированию = Новый ТаблицаЗначений;
    тзФайлыККопированию.Колонки.Добавить("ИмяФайлЛокальный");
    тзФайлыККопированию.Колонки.Добавить("ИмяФайлСервер");
    тзФайлыККопированию.Колонки.Добавить("ВидОперации");// 1-копирование, 2-перемещение, 3-удаление
    Свойство_ПоставкаНаЗаказ = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Поставка на заказ");
    Свойство_АнглийскаяТранскрипция = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Английская транскрипция");
    Свойство_ТУ = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("ТУ");
    Свойство_ОстатокДляСайта = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("ОстатокДляСайта");
    Свойство_Вес = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Масса изделия gr");
    СвойствоДатаВыпуска = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Дата выпуска");
    СвойствоПроизводитель = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Торговая марка");
    СвойствоYoutube = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Youtube");

    ВариантПечатиЗаголовок = Справочники.ипВариантыПечати.НайтиПоНаименованию("Заголовок", Истина);

    ТекстЗапроса = "ВЫБРАТЬ
                   |    Номенклатура.Ссылка,
                   |    ЕСТЬNULL(Номенклатура.Родитель.Код, 0) КАК РодительКод,
                   |    Номенклатура.Код,
                   |    Номенклатура.Наименование,
                   |    Номенклатура.Артикул,
                   |    Номенклатура.ЕдиницаИзмерения.Код,
                   |    Номенклатура.НаименованиеПолное,
                   |    Номенклатура.ипНаименованиеПодбор,
                   |    Номенклатура.ПометкаУдаления,
                   |    ЕСТЬNULL(НоменклатураДополнительныеРеквизиты_01.Значение, 0) КАК Вес,
                   |    ЕСТЬNULL(НоменклатураДополнительныеРеквизиты_02.Значение, 0) КАК ОстатокДляСайта,
                   |    ЕСТЬNULL(НоменклатураДополнительныеРеквизиты_03.Значение, """") КАК ПоставкаНаЗаказСроки,
                   |    ЕСТЬNULL(НоменклатураДополнительныеРеквизиты_04.Значение, """") КАК АнглийскаяТранскрипция,
                   |    ЕСТЬNULL(НоменклатураДополнительныеРеквизиты_05.Значение, """") КАК ТУ,
                   |    Номенклатура.ипОписание КАК Описание,
                   |    ЕСТЬNULL(НоменклатураДополнительныеРеквизиты_06.Значение, """") КАК Производитель,
                   |    ЕСТЬNULL(НоменклатураДополнительныеРеквизиты_07.Значение, ДАТАВРЕМЯ(1900, 1, 1)) КАК ДатаВыпуска,
                   |    НоменклатураДополнительныеРеквизиты_08.Значение КАК Youtube
                   |ИЗ
                   |    Справочник.Номенклатура КАК Номенклатура
                   |        ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты_01
                   |        ПО (НоменклатураДополнительныеРеквизиты_01.Ссылка = Номенклатура.Ссылка)
                   |            И (НоменклатураДополнительныеРеквизиты_01.Свойство = &СвойствоВес)
                   |        ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты_02
                   |        ПО (НоменклатураДополнительныеРеквизиты_02.Ссылка = Номенклатура.Ссылка)
                   |            И (НоменклатураДополнительныеРеквизиты_02.Свойство = &СвойствоОстатокДляСайта)
                   |        ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты_03
                   |        ПО (НоменклатураДополнительныеРеквизиты_03.Ссылка = Номенклатура.Ссылка)
                   |            И (НоменклатураДополнительныеРеквизиты_03.Свойство = &СвойствоПоставкаНаЗаказ)
                   |        ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты_04
                   |        ПО (НоменклатураДополнительныеРеквизиты_04.Ссылка = Номенклатура.Ссылка)
                   |            И (НоменклатураДополнительныеРеквизиты_04.Свойство = &СвойствоАнглийскаяТранскрипция)
                   |        ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты_05
                   |        ПО (НоменклатураДополнительныеРеквизиты_05.Ссылка = Номенклатура.Ссылка)
                   |            И (НоменклатураДополнительныеРеквизиты_05.Свойство = &СвойствоТУ)
                   |        ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты_06
                   |        ПО (НоменклатураДополнительныеРеквизиты_06.Свойство = &СвойствоПроизводитель)
                   |            И (НоменклатураДополнительныеРеквизиты_06.Ссылка = Номенклатура.Ссылка)
                   |        ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты_07
                   |        ПО (НоменклатураДополнительныеРеквизиты_07.Ссылка = Номенклатура.Ссылка)
                   |            И (НоменклатураДополнительныеРеквизиты_07.Свойство = &СвойствоДатаВыпуска)
                   |        ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты_08
                   |        ПО (НоменклатураДополнительныеРеквизиты_08.Ссылка = Номенклатура.Ссылка)
                   |            И (НоменклатураДополнительныеРеквизиты_08.Свойство = &СвойствоYoutube)
                   |ГДЕ
                   |    Номенклатура.Ссылка В(&СпНоменклатура)";
    Запрос = Новый Запрос;
    Запрос.Текст = ТекстЗапроса;
    Запрос.УстановитьПараметр("СпНоменклатура", мсвНоменклатура);
    Запрос.УстановитьПараметр("СвойствоВес", Свойство_Вес);
    Запрос.УстановитьПараметр("СвойствоОстатокДляСайта", Свойство_ОстатокДляСайта);
    Запрос.УстановитьПараметр("СвойствоПоставкаНаЗаказ", Свойство_ПоставкаНаЗаказ);
    Запрос.УстановитьПараметр("СвойствоАнглийскаяТранскрипция", Свойство_АнглийскаяТранскрипция);
    Запрос.УстановитьПараметр("СвойствоТУ", Свойство_ТУ);
    Запрос.УстановитьПараметр("СвойствоПроизводитель", СвойствоПроизводитель);
    Запрос.УстановитьПараметр("СвойствоДатаВыпуска", СвойствоДатаВыпуска);
    Запрос.УстановитьПараметр("СвойствоYoutube", СвойствоYoutube);

    выборка = Запрос.Выполнить().Выбрать();

    Пока выборка.Следующий() Цикл
        // выгуржаем производителя
        manufacturer_id=0;
        info_block_001 = ПолучитьИнфоБлок001(выборка.Ссылка);
        info_block_002 = ПолучитьИнфоБлок002(выборка.Ссылка);
        Если ЗначениеЗаполнено(выборка.Производитель) тогда
            manufacturer_id = ПолучитьПроизводитель(выборка.Производитель, conn, л_файл, тзФайлыККопированию);
        КонецЕсли;

        мсвПоля = Новый Массив;
        мсвПоля.Добавить("product_id");
        мсвПоля.Добавить("date_added");
        соотвУсловия = Новый Соответствие;
        соотвУсловия.Вставить("1c_id", выборка.Код);
        rows = ВыбратьИз("product", мсвПоля, соотвУсловия, conn, л_файл);
        Если rows=Неопределено Тогда
            СообщитьЛог("Ошибка поиска товара код:'"+выборка.Код+"'", л_файл, СтатусСообщения.ОченьВажное);
            Возврат Ложь;
        КонецЕсли;
        product_id = ?(rows=0,-1, rows.Fields.Item("product_id").Value);
        ДатаДобавления = Дата (1980,1,1);
        Если product_id=-1 Тогда
            // запись не найдена, создаем новую
            соотвПоля = Новый Соответствие;
            соотвПоля.Вставить("1c_id", выборка.Код);
            соотвПоля.Вставить("date_added", ТекущаяДата());
            rows = ВставитьВ("product", соотвПоля, conn, л_файл);
            Если rows=Неопределено Тогда
                СообщитьЛог("Ошибка вставки товара код:'"+выборка.Код+"'", л_файл, СтатусСообщения.ОченьВажное);
                Возврат Ложь;
            КонецЕсли;
            // находим id новой записи
            мсвПоля = Новый Массив;мсвПоля.Добавить("product_id");
            соотвУсловия = Новый Соответствие;
            соотвУсловия.Вставить("1c_id", выборка.Код);
            rows = ВыбратьИз("product", мсвПоля, соотвУсловия, conn, л_файл);
            Если rows=Неопределено Тогда
                СообщитьЛог("Ошибка поиска товара код:'"+выборка.Код+"'", л_файл, СтатусСообщения.ОченьВажное);
                Возврат Ложь;
            КонецЕсли;
            product_id = ?(rows=0,-1, rows.Fields.Item("product_id").Value);
            Если product_id<1 Тогда
                СообщитьЛог("Ошибка, новый товар была записен, но не найдена, код:'"+выборка.Код+"'", л_файл, СтатусСообщения.ОченьВажное);
                Возврат Ложь;
            КонецЕсли;
            // добавим привязку для product_to_store
            соотвПоля = Новый Соответствие;
            соотвПоля.Вставить("product_id", product_id);
            соотвПоля.Вставить("store_id", 0);
            rows=ВставитьВ("product_to_store", соотвПоля, conn, л_файл);
            Если rows=Неопределено Тогда
                СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                Возврат Ложь;
            КонецЕсли;
        Иначе
            // запись существует
            Попытка
                ДатаДобавления = rows.Fields.Item("date_added").Value;
            Исключение
                ;
            КонецПопытки;
        КонецЕсли;
        // обновляем реквизиты товара
        соотвПоля = Новый Соответствие;
        Если ДатаДобавления = Дата (1980,1,1) Тогда
            соотвПоля.Вставить("date_added", ТекущаяДата());
        КонецЕсли;
        соотвПоля.Вставить("date_modified", ТекущаяДата());
        соотвПоля.Вставить("model", выборка.Наименование);
        соотвПоля.Вставить("weight", ВЧисло(выборка.Вес));
        соотвПоля.Вставить("unit_of_mnt_id", выборка.ЕдиницаИзмеренияКод);
        соотвПоля.Вставить("fake_qty", выборка.ОстатокДляСайта);
        соотвПоля.Вставить("order_date", выборка.ПоставкаНаЗаказСроки);
        соотвПоля.Вставить("status", ?(выборка.ПометкаУдаления, 0, 1));
        соотвПоля.Вставить("sku", выборка.Артикул);
        соотвПоля.Вставить("manufacture_date", выборка.ДатаВыпуска);
        соотвПоля.Вставить("manufacturer_id", manufacturer_id);
        соотвПоля.Вставить("info_block_001", info_block_001);
        соотвПоля.Вставить("info_block_002", info_block_002);
        соотвПоля.Вставить("youtube", выборка.Youtube);
        соотвУсловия = Новый Соответствие;
        соотвУсловия.Вставить("product_id", product_id);
        rows = ОбновитьТаблицу("product", соотвПоля, соотвУсловия, conn, л_файл);
        Если rows=Неопределено Тогда
            СообщитьЛог("Ошибка обновления записи описания для категории, category_id:'"+category_id+"'", л_файл, СтатусСообщения.ОченьВажное);
            Возврат Ложь;
        КонецЕсли;
        // обновляем записи product_description
        Для language_id=1 По 2 Цикл
            мсвПоля = Новый Массив;
            мсвПоля.Добавить("product_id");
            соотвУсловия = Новый Соответствие;
            соотвУсловия.Вставить("product_id", product_id);
            соотвУсловия.Вставить("language_id", language_id);
            rows = ВыбратьИз("product_description", мсвПоля, соотвУсловия, conn, л_файл);
            КраткоеОписание = СокрЛП(выборка.Описание);
            КраткоеОписание = СтрЗаменить(КраткоеОписание, "неизвестна; ", "");
            ТаблицаХтмл = СоздатьТаблицуХТМЛ(выборка.Ссылка);
            заглвк = ипЭлектроникс.ПолучитьТекстПечатиНом(выборка.Ссылка, ВариантПечатиЗаголовок, ": ", "; ", Ложь);
            description_trimmed = выборка.Наименование;
            description_trimmed = СтрЗаменить(description_trimmed, " ","");
            description_trimmed = СтрЗаменить(description_trimmed, ".","");
            description_trimmed = СтрЗаменить(description_trimmed, "-","");
            description_trimmed = СтрЗаменить(description_trimmed, ",","");
            description_trimmed = СтрЗаменить(description_trimmed, "/","");
            description_trimmed = НРег(description_trimmed);
            product_tag="";
            Если Не ПустаяСтрока(выборка.АнглийскаяТранскрипция) Тогда
                product_tag = Строка(выборка.АнглийскаяТранскрипция);
            КонецЕсли;
            Если Не ПустаяСтрока(выборка.ТУ) Тогда
                product_tag = product_tag + ", " + Строка(выборка.ТУ);
            КонецЕсли;
            //
            соотвПоля = Новый Соответствие;
            соотвПоля.Вставить("product_id",product_id);
            соотвПоля.Вставить("language_id",language_id);
            соотвПоля.Вставить("description2",КраткоеОписание);
            соотвПоля.Вставить("description",ТаблицаХтмл);
            соотвПоля.Вставить("description_trimmed",description_trimmed);
            соотвПоля.Вставить("caption",заглвк);
            соотвПоля.Вставить("name",выборка.Наименование);
            Если rows<>Неопределено И rows<>0 Тогда
                // запись product_description существует, обновляем
                rows = ОбновитьТаблицу("product_description", соотвПоля, соотвУсловия, conn, л_файл);
                Если rows=Неопределено Тогда
                    СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                    Возврат Ложь;
                КонецЕсли;
            Иначе
                rows = ВставитьВ("product_description", соотвПоля, conn, л_файл);
                Если rows=Неопределено Тогда
                    СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                    Возврат Ложь;
                КонецЕсли;
            КонецЕсли;
            // пишем данные в таблицу product_tag
            мсвПоля = Новый Массив;
            мсвПоля.Добавить("product_tag_id");
            rows = ВыбратьИз("product_tag", мсвПоля, соотвУсловия, conn, л_файл);
            соотвПоля = Новый Соответствие;
            соотвПоля.Вставить("product_id", product_id);
            соотвПоля.Вставить("language_id", language_id);
            соотвПоля.Вставить("tag", product_tag);
            Если rows<>Неопределено И rows<>0 Тогда
                // запись существует, обновляем
                rows = ОбновитьТаблицу("product_tag", соотвПоля, соотвУсловия, conn, л_файл);
                Если rows=Неопределено Тогда
                    СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                    Возврат Ложь;
                КонецЕсли;
            Иначе
                rows = ВставитьВ("product_tag", соотвПоля, conn, л_файл);
                Если rows=Неопределено Тогда
                    СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                    Возврат Ложь;
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;
        // обновляем привязку товара к категории
        мсвПоля = Новый Массив;
        мсвПоля.Добавить("category_id");
        соотвУсловия = Новый Соответствие;
        соотвУсловия.Вставить("1c_id", выборка.РодительКод);
        rows = ВыбратьИз("category", мсвПоля, соотвУсловия, conn, л_файл);
        Если rows=0 Тогда
            СообщитьЛог("ошибка поиска category_id", л_файл, СтатусСообщения.ОченьВажное);
            Возврат Ложь;
        КонецЕсли;
        category_id = rows.Fields.Item("category_id").Value;
        query = "SELECT product_to_category.product_id, product_to_category.category_id, category.1c_id AS category_1c_id FROM product_to_category
        |LEFT JOIN category on category.category_id = product_to_category.category_id
        |WHERE product_id=%product_id% AND product_to_category.category_id<>1039"; //1039 - это id категории "Новые поступления", эту категорию пропускаем
        query = СтрЗаменить(query, "%product_id%", ВСтроку(product_id));
        rows = ВыполнитьЗапрос(query, conn, л_файл);
        Если rows=Неопределено Тогда
            СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
            Возврат Ложь;
        КонецЕсли;
        Если rows=0 Тогда
            // привязки не существует, добавляем
            соотвПоля = Новый Соответствие;
            соотвПоля.Вставить("product_id", product_id);
            соотвПоля.Вставить("category_id", category_id);
            Если rows=Неопределено Тогда
                СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                Возврат Ложь;
            КонецЕсли;
            rows = ВставитьВ("product_to_category", соотвПоля, conn, л_файл);
            Если rows=Неопределено Тогда
                СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                Возврат Ложь;
            КонецЕсли;
        Иначе
            category_1c_id = rows.Fields.Item("category_1c_id").Value;
            // проверяем на ошибки: привязка должна быть только одна
            query = "SELECT count(1) as links FROM product_to_category WHERE product_id=%product_id% AND category_id<>%category_id%";
            query = СтрЗаменить(query, "%product_id%", ВСтроку(product_id));
            query = СтрЗаменить(query, "%category_id%", ВСтроку(1039));//1039 - это id категории "Новые Поступления", там товар может лежать , как
            rows = ВыполнитьЗапрос(query, conn, л_файл);
            Если rows=Неопределено Тогда
                СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                Возврат Ложь;
            КонецЕсли;
            links = rows.Fields.Item("links").Value;
            Если links>1 Тогда
                // существует больше одной привязки, удаляем все привязки по товару
                query = "DELETE FROM product_to_category WHERE product_id=%product_id%";
                query = СтрЗаменить(query, "%product_id%", ВСтроку(product_id));
                rows = ВыполнитьЗапрос(query, conn, л_файл);
                Если rows=Неопределено Тогда
                    СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                    Возврат Ложь;
                КонецЕсли;
                // добавляем новую привязку
                соотвПоля = Новый Соответствие;
                соотвПоля.Вставить("product_id", product_id);
                соотвПоля.Вставить("category_id", category_id);
                Если rows=Неопределено Тогда
                    СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                    Возврат Ложь;
                КонецЕсли;
                rows = ВставитьВ("product_to_category", соотвПоля, conn, л_файл);
                Если rows=Неопределено Тогда
                    СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                    Возврат Ложь;
                КонецЕсли;
            Иначе
                // существует одна, проверим не нужно ли её обновить
                Если category_1c_id<>выборка.РодительКод Тогда
                    // привязка устарела, оьбновляем
                    соотвПоля = Новый Соответствие;
                    соотвПоля.Вставить("product_id", product_id);
                    соотвПоля.Вставить("category_id", category_id);
                    соотвУсловия = Новый Соответствие;
                    соотвУсловия.Вставить("product_id", product_id);
                    rows = ОбновитьТаблицу("product_to_category", соотвПоля, соотвУсловия, conn, л_файл);
                    Если rows=Неопределено Тогда
                        СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                        Возврат Ложь;
                    КонецЕсли;
                КонецЕсли;

            КонецЕсли;

        КонецЕсли;
        // добавим привязку для product_to_store
        мсвПоля = Новый Массив;
        мсвПоля.Добавить("product_id");
        соотвУсловия = Новый Соответствие;
        соотвУсловия.Вставить("product_id", product_id);
        rows = ВыбратьИз("product_to_store", мсвПоля, соотвУсловия, conn, л_файл);
        Если rows=Неопределено Тогда
            СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
            Возврат Ложь;
        КонецЕсли;
        Если rows=0 Тогда
            // привязки не существует, добавляем
            соотвПоля = Новый Соответствие;
            соотвПоля.Вставить("product_id", product_id);
            соотвПоля.Вставить("store_id", 0);
            rows=ВставитьВ("product_to_store", соотвПоля, conn, л_файл);
            Если rows=Неопределено Тогда
                СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                Возврат Ложь;
            КонецЕсли;
        КонецЕсли;

    КонецЦикла;
    Если выборка.Количество()>0 Тогда
        ОчиститьКэшСайт(л_файл);
    КонецЕсли;
    СообщитьЛог("Завершение:Выгрузка номенклатуры. Время выполнения (сек):"+Строка (ТекущаяДата() - Дата_Старт), л_файл);
    // обновляем изображения
    // выборка данных (изображения)
    Дата_Старт = ТекущаяДата();
    СообщитьЛог("Старт: Выгрузка прикрепленных файлов.", л_файл);
    ТекстЗапроса = "ВЫБРАТЬ
                   |    НоменклатураПрисоединенныеФайлы.ДатаМодификацииУниверсальная,
                   |    НоменклатураПрисоединенныеФайлы.Ссылка,
                   |    НоменклатураПрисоединенныеФайлы.Описание КАК Порядок,
                   |    НоменклатураПрисоединенныеФайлы.Расширение,
                   |    Номенклатура.Код КАК НоменклатураКод
                   |ИЗ
                   |    Справочник.Номенклатура КАК Номенклатура
                   |        ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
                   |        ПО (НоменклатураПрисоединенныеФайлы.ВладелецФайла = Номенклатура.Ссылка)
                   |            И (НоменклатураПрисоединенныеФайлы.Расширение ПОДОБНО ""%jpg%"")
                   |            И (НЕ НоменклатураПрисоединенныеФайлы.ПометкаУдаления)
                   |ГДЕ
                   |    Номенклатура.Ссылка В(&СпНоменклатура)
                   |
                   |УПОРЯДОЧИТЬ ПО
                   |    НоменклатураПрисоединенныеФайлы.Наименование
                   |ИТОГИ ПО
                   |    НоменклатураКод";
    Запрос = Новый Запрос();
    Запрос.Текст = ТекстЗапроса;
    Запрос.УстановитьПараметр("СпНоменклатура", мсвНоменклатура);
    ВыборкаНоменклатура  = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    no_image_server_path = "data/design/no-photo.jpg";
    rndmImageGuid = "073e46e8-df58-47e1-8c71-c1aed0b9efee";
    Пока ВыборкаНоменклатура.Следующий() Цикл
        ВыборкаИзображения = ВыборкаНоменклатура.Выбрать();
        сГуидПрисоединенныеФайлы = "";
        product_id=0;
        флНоменклатураБезИзображений = Ложь;
        Пока ВыборкаИзображения.Следующий() Цикл
            Если Не ЗначениеЗаполнено(ВыборкаИзображения.Ссылка) Тогда
                флНоменклатураБезИзображений = Истина;
                // нет прикрепленных изображений, втсавляем no image заглушку
                // сначала проверим, возможно no-image уже выгружен
                // получим product_id нашего товара
                мсвПоля = Новый Массив;
                мсвПоля.Добавить("product_id");
                соотвУсловия = Новый Соответствие;
                соотвУсловия.Вставить("1c_id", ВыборкаНоменклатура.НоменклатураКод );
                rows = ВыбратьИз("product", мсвПоля, соотвУсловия, conn, л_файл);
                Если rows=Неопределено Тогда
                    СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                    Возврат 0;
                КонецЕсли;
                product_id = ?(rows=0,-1, rows.Fields.Item("product_id").Value);
                Если product_id<>-1 Тогда
                    мсвПоля = Новый Массив;
                    мсвПоля.Добавить("product_image_id");
                    соотвУсловия = Новый Соответствие;
                    соотвУсловия.Вставить("product_id", product_id );
                    соотвУсловия.Вставить("image", no_image_server_path );
                    rows = ВыбратьИз("product_image", мсвПоля, соотвУсловия, conn, л_файл);
                    Если rows=Неопределено Тогда
                        СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                        Возврат 0;
                    КонецЕсли;
                    product_image_id = ?(rows=0,-1, rows.Fields.Item("product_image_id").Value);
                    Если product_image_id=-1 Тогда
                        соотвПоля = Новый Соответствие;
                        соотвПоля.Вставить("product_id", product_id);
                        соотвПоля.Вставить("1c_guid", rndmImageGuid);
                        соотвПоля.Вставить("date_modified", ТекущаяДата());
                        соотвПоля.Вставить("image", no_image_server_path);
                        соотвПоля.Вставить("sort_order", 1);
                        ВставитьВ("product_image", соотвПоля, conn, л_файл);
                    КонецЕсли;
                КонецЕсли;
                Прервать;// прерываем цикл по изобрежениям тек. номеклатуры
            КонецЕсли;
            // + 2014-11-09 иногда дата изменения присоединенного файла заполнна не корректно, исправляем
            Если ВыборкаИзображения.ДатаМодификацииУниверсальная<Дата (2010,1,1) Тогда
                ИсправитьДатуПрисоединенногоФайла(ВыборкаИзображения.Ссылка, л_файл);
            КонецЕсли;
            // - 2014-11-09
            // проверяем существует ли запись по тек. изображению в mysql
            ПорядокСортировки = ВЧисло(ВыборкаИзображения.Порядок);
            query = "SELECT product.product_id, product_image.date_modified, product_image.product_image_id, product_image.sort_order FROM product
            |LEFT JOIN product_image ON (product_image.product_id = product.product_id AND product_image.1c_guid='%1c_guid%')
            |WHERE product.1c_id='%1c_id%'";
            image_1c_guid = Строка (ВыборкаИзображения.Ссылка.УникальныйИдентификатор());
            query = СтрЗаменить(query, "%1c_guid%", image_1c_guid);
            query = СтрЗаменить(query, "%1c_id%", ВыборкаИзображения.НоменклатураКод);
            rows = ВыполнитьЗапрос(query, conn, л_файл);
            Если rows=Неопределено Тогда
                СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                Возврат Ложь;
            КонецЕсли;
            Если rows<>0 Тогда
                сГуидПрисоединенныеФайлы = сГуидПрисоединенныеФайлы + ", '"+image_1c_guid+"'";
                product_id = rows.Fields.Item("product_id").Value;
                product_image_id = rows.Fields.Item("product_image_id").Value;
                флКопироватьФайлНаСервер = Ложь;
                Если product_image_id=Null Тогда
                    // изображения не существует, пишем
                    соотвПоля = Новый Соответствие;
                    соотвПоля.Вставить("product_id", product_id);
                    соотвПоля.Вставить("1c_guid", image_1c_guid);
                    соотвПоля.Вставить("date_modified", ВыборкаИзображения.ДатаМодификацииУниверсальная);
                    соотвПоля.Вставить("image", "data/"+image_1c_guid+"."+ВыборкаИзображения.Расширение);
                    соотвПоля.Вставить("sort_order", ПорядокСортировки);
                    ВставитьВ("product_image", соотвПоля, conn, л_файл);
                    флКопироватьФайлНаСервер = Истина;
                Иначе
                    ДатаИзменения = ТекущаяДата();
                    Попытка
                        ДатаИзменения  = rows.Fields.Item("date_modified").Value;
                    Исключение
                        ;
                    КонецПопытки;
                    sort_order = rows.Fields.Item("sort_order").Value;
                    // Обновляем изображение
                    соотвПоля = Новый Соответствие;
                    соотвПоля.Вставить("date_modified", ВыборкаИзображения.ДатаМодификацииУниверсальная);
                    соотвПоля.Вставить("image", "data/"+image_1c_guid+"."+ВыборкаИзображения.Расширение);
                    соотвПоля.Вставить("sort_order", ПорядокСортировки);
                    соотвУсловия = Новый Соответствие;
                    соотвУсловия.Вставить("product_id", product_id);
                    соотвУсловия.Вставить("1c_guid", image_1c_guid);
                    rows = ОбновитьТаблицу("product_image", соотвПоля, соотвУсловия, conn, л_файл);
                    Если rows=Неопределено Тогда
                        СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                        Возврат Ложь;
                    КонецЕсли;
                    флКопироватьФайлНаСервер = Истина;

                КонецЕсли;
                Если флКопироватьФайлНаСервер Тогда
                    // копируем файл на сервер
                    КартинкаПолныйПуть = СохранитьПрисоединенныйФайл(ВыборкаИзображения.Ссылка);
                    стр_тзФайлыККопированию = тзФайлыККопированию.Добавить();
                    стр_тзФайлыККопированию.ИмяФайлЛокальный = КартинкаПолныйПуть;
                    стр_тзФайлыККопированию.ИмяФайлСервер = ИмяПапкиСерверImage + image_1c_guid + ".jpg";
                    стр_тзФайлыККопированию.ВидОперации = 2;
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;
        // удаляем изображения которые есть на сайте, но которых уже нет в 1С
        сГуидПрисоединенныеФайлы = Сред (сГуидПрисоединенныеФайлы, 3);
        query="";
        Если ПустаяСтрока(сГуидПрисоединенныеФайлы) Тогда
            query = "SELECT product.product_id, product_image.image, product_image.product_image_id FROM product
            |LEFT JOIN product_image ON (product_image.product_id=product.product_id )
            |WHERE product.1c_id='%1c_id%'";
        Иначе
            query = "SELECT product.product_id, product_image.image, product_image.product_image_id FROM product
            |LEFT JOIN product_image ON (product_image.product_id=product.product_id AND NOT product_image.1c_guid IN (%list_1c_guids%) )
            |WHERE product.1c_id='%1c_id%'";
        КонецЕсли;

        Если флНоменклатураБезИзображений Тогда
            query = query + " AND NOT product_image.image='"+no_image_server_path+"'";
        КонецЕсли;

        query = СтрЗаменить(query, "%list_1c_guids%", сГуидПрисоединенныеФайлы);
        query = СтрЗаменить(query, "%1c_id%", ВыборкаНоменклатура.НоменклатураКод);
        rows = ВыполнитьЗапрос(query, conn, л_файл);
        Если rows=Неопределено Тогда
            СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
            Возврат Ложь;
        КонецЕсли;
        Если rows<>0 Тогда
            // удаляем файлы с сервера
            // строим список product_image_id для удаления
            product_image_id_lst = "";
            Пока rows.EOF()=0 Цикл
                product_image_id = rows.Fields.Item("product_image_id").Value;
                Если product_image_id=Null Тогда
                    rows.MoveNext();
                    Продолжить;
                КонецЕсли;
                ИмяФайлСервер = "/image/" + rows.Fields.Item("image").Value;
                product_image_id_lst = product_image_id_lst + ", " + Формат(product_image_id, "ЧГ=");
                Если rows.Fields.Item("image").Value<>no_image_server_path Тогда // не удлаяем статичный файл заглушку "no_image.jpg"
                    стр_тзФайлыККопированию = тзФайлыККопированию.Добавить();
                    стр_тзФайлыККопированию.ИмяФайлСервер = ИмяФайлСервер;
                    стр_тзФайлыККопированию.ВидОперации = 3;// удаление
                КонецЕсли;
                rows.MoveNext();
            КонецЦикла;
            product_image_id_lst = Сред (product_image_id_lst, 3);
            // удаляем записи из таблицы product_image
            Если Не ПустаяСтрока(product_image_id_lst) Тогда
                query = "DELETE FROM product_image WHERE product_image_id IN (%product_image_id_lst%)";
                query = СтрЗаменить(query, "%product_image_id_lst%", product_image_id_lst);
                rows = ВыполнитьЗапрос(query, conn, л_файл);
                Если rows=Неопределено Тогда
                    СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                    Возврат Ложь;
                КонецЕсли;
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;
    // ##########################
    // обновляем вложения (downloads)
    // ##########################
    // выборка данных
    ТекстЗапроса = "ВЫБРАТЬ
                   |    НоменклатураПрисоединенныеФайлы.ДатаМодификацииУниверсальная,
                   |    НоменклатураПрисоединенныеФайлы.Ссылка,
                   |    НоменклатураПрисоединенныеФайлы.Описание КАК Порядок,
                   |    НоменклатураПрисоединенныеФайлы.Расширение,
                   |    НоменклатураПрисоединенныеФайлы.Наименование,
                   |    Номенклатура.Код КАК НоменклатураКод
                   |ИЗ
                   |    Справочник.Номенклатура КАК Номенклатура
                   |        ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
                   |        ПО (НоменклатураПрисоединенныеФайлы.ВладелецФайла = Номенклатура.Ссылка)
                   |            И (НЕ НоменклатураПрисоединенныеФайлы.Расширение ПОДОБНО ""%jpg%"")
                   |            И (НЕ НоменклатураПрисоединенныеФайлы.ПометкаУдаления)
                   |ГДЕ
                   |    Номенклатура.Ссылка В(&СпНоменклатура)
                   |
                   |УПОРЯДОЧИТЬ ПО
                   |    НоменклатураПрисоединенныеФайлы.Наименование
                   |ИТОГИ ПО
                   |    НоменклатураКод";
    Запрос = Новый Запрос(ТекстЗапроса);
    Запрос.УстановитьПараметр("СпНоменклатура", мсвНоменклатура);
    ВыборкаНоменклатура  = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    Пока ВыборкаНоменклатура.Следующий() Цикл
        ВыборкаПрисоединенныеФайлы = ВыборкаНоменклатура.Выбрать();
        сГуидПрисоединенныеФайлы = "";
        product_id=0;
        Пока ВыборкаПрисоединенныеФайлы.Следующий() Цикл
            Если Не ЗначениеЗаполнено(ВыборкаПрисоединенныеФайлы.Ссылка) Тогда
                Прервать;
            КонецЕсли;
            // + 2014-11-09 иногда дата изменения присоединенного файла заполнна не корректно, исправляем
            Если ВыборкаПрисоединенныеФайлы.ДатаМодификацииУниверсальная<Дата (2010,1,1) Тогда
                ИсправитьДатуПрисоединенногоФайла(ВыборкаПрисоединенныеФайлы.Ссылка, л_файл);
            КонецЕсли;
            // - 2014-11-09
            // ищем вложения по тек. товару
            query = "SELECT product.product_id, attachment.date_modified, attachment.attachment_id FROM product
            |LEFT JOIN attachment ON (attachment.product_id = product.product_id AND attachment.1c_guid='%1c_guid%')
            |WHERE product.1c_id='%1c_id%'";
            attachment_1c_guid = Строка (ВыборкаПрисоединенныеФайлы.Ссылка.УникальныйИдентификатор());
            query = СтрЗаменить(query, "%1c_guid%", attachment_1c_guid);
            query = СтрЗаменить(query, "%1c_id%", ВыборкаПрисоединенныеФайлы.НоменклатураКод);
            rows = ВыполнитьЗапрос(query, conn, л_файл);
            Если rows=Неопределено Тогда
                СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                Возврат Ложь;
            КонецЕсли;
            Если rows<>0 Тогда
                сГуидПрисоединенныеФайлы = сГуидПрисоединенныеФайлы + ", '"+attachment_1c_guid+"'";
                product_id = rows.Fields.Item("product_id").Value;
                attachment_id = rows.Fields.Item("attachment_id").Value;
                флКопироватьФайлНаСервер = Ложь;
                Если attachment_id=Null Тогда
                    //вложения не существует, пишем
                    соотвПоля = Новый Соответствие;
                    соотвПоля.Вставить("product_id", product_id);
                    соотвПоля.Вставить("1c_guid", attachment_1c_guid);
                    соотвПоля.Вставить("date_modified", ВыборкаПрисоединенныеФайлы.ДатаМодификацииУниверсальная);
                    соотвПоля.Вставить("file", "/download/"+attachment_1c_guid+"."+ВыборкаПрисоединенныеФайлы.Расширение);
                    соотвПоля.Вставить("description", ВыборкаПрисоединенныеФайлы.Наименование + "."+ВыборкаПрисоединенныеФайлы.Расширение);
                    ВставитьВ("attachment", соотвПоля, conn, л_файл);
                    флКопироватьФайлНаСервер = Истина;
                Иначе
                    ДатаИзменения = ТекущаяДата();
                    Попытка
                        ДатаИзменения  = rows.Fields.Item("date_modified").Value;
                    Исключение
                        ;
                    КонецПопытки;
                    //Если ДатаИзменения<>ВыборкаПрисоединенныеФайлы.ДатаМодификацииУниверсальная Тогда
                        // Обновляем вложение
                        соотвПоля = Новый Соответствие;
                        соотвПоля.Вставить("date_modified", ВыборкаПрисоединенныеФайлы.ДатаМодификацииУниверсальная);
                        соотвПоля.Вставить("file", "/download/"+attachment_1c_guid+"."+ВыборкаПрисоединенныеФайлы.Расширение);
                        соотвПоля.Вставить("description", ВыборкаПрисоединенныеФайлы.Наименование + "."+ВыборкаПрисоединенныеФайлы.Расширение);
                        соотвУсловия = Новый Соответствие;
                        соотвУсловия.Вставить("product_id", product_id);
                        соотвУсловия.Вставить("1c_guid", attachment_1c_guid);
                        rows = ОбновитьТаблицу("attachment", соотвПоля, соотвУсловия, conn, л_файл);
                        Если rows=Неопределено Тогда
                            СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                            Возврат Ложь;
                        КонецЕсли;
                        флКопироватьФайлНаСервер = Истина;
                    //КонецЕсли;
                КонецЕсли;
                Если флКопироватьФайлНаСервер Тогда
                    // копируем файл на сервер
                    ВложениеПолныйПуть = СохранитьПрисоединенныйФайл(ВыборкаПрисоединенныеФайлы.Ссылка);
                    стр_тзФайлыККопированию = тзФайлыККопированию.Добавить();
                    стр_тзФайлыККопированию.ИмяФайлЛокальный = ВложениеПолныйПуть;
                    стр_тзФайлыККопированию.ИмяФайлСервер = ИмяПапкиСерверDownload + attachment_1c_guid + "."+ВыборкаПрисоединенныеФайлы.Расширение;
                    стр_тзФайлыККопированию.ВидОперации = 2;// перемещение
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;
        // удяляем вложения которые есть на сайте, но которых уже нет в 1С
        сГуидПрисоединенныеФайлы = Сред (сГуидПрисоединенныеФайлы, 3);
        query="";
        Если ПустаяСтрока (сГуидПрисоединенныеФайлы) Тогда
            query = "SELECT product.product_id, attachment.file, attachment.attachment_id FROM product
            |LEFT JOIN attachment ON (attachment.product_id=product.product_id )
            |WHERE product.1c_id='%1c_id%'";
        Иначе
            query = "SELECT product.product_id, attachment.file, attachment.attachment_id FROM product
            |LEFT JOIN attachment ON (attachment.product_id=product.product_id AND NOT attachment.1c_guid IN (%list_1c_guids%) )
            |WHERE product.1c_id='%1c_id%'";
        КонецЕсли;
        query = СтрЗаменить(query, "%list_1c_guids%", сГуидПрисоединенныеФайлы);
        query = СтрЗаменить(query, "%1c_id%", ВыборкаНоменклатура.НоменклатураКод);
        rows = ВыполнитьЗапрос(query, conn, л_файл);
        Если rows=Неопределено Тогда
            СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
            Возврат Ложь;
        КонецЕсли;
        Если rows<>0 Тогда
            // удаляем файлы с сервера
            // строим список product_image_id для удаления
            attachment_id_lst = "";
            Пока rows.EOF()=0 Цикл
                attachment_id = rows.Fields.Item("attachment_id").Value;
                Если attachment_id=Null Тогда
                    rows.MoveNext();
                    Продолжить;
                КонецЕсли;
                ИмяФайлСервер = rows.Fields.Item("file").Value;
                attachment_id_lst = attachment_id_lst + ", " + Формат(attachment_id, "ЧГ=");
                стр_тзФайлыККопированию = тзФайлыККопированию.Добавить();
                стр_тзФайлыККопированию.ИмяФайлСервер = ИмяФайлСервер;
                стр_тзФайлыККопированию.ВидОперации = 3;// удаление
                rows.MoveNext();
            КонецЦикла;
            attachment_id_lst = Сред (attachment_id_lst, 3);
            Если Не ПустаяСтрока(attachment_id_lst) Тогда
                // удаляем записи из таблицы attachment
                query = "DELETE FROM attachment WHERE attachment_id IN (%attachment_id_lst%)";
                query = СтрЗаменить(query, "%attachment_id_lst%", attachment_id_lst);
                rows = ВыполнитьЗапрос(query, conn, л_файл);
                Если rows=Неопределено Тогда
                    СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                    Возврат Ложь;
                КонецЕсли;
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;
    // выгрузка сопутствующих товаров
    ТекстЗапроса = "ВЫБРАТЬ
                   |    НоменклатураипСопутствующиеТовары.Ссылка.Код КАК ВладелецКод,
                   |    НоменклатураипСопутствующиеТовары.Номенклатура.Код,
                   |    1 КАК ТипПривязки
                   |ИЗ
                   |    Справочник.Номенклатура.ипСопутствующиеТовары КАК НоменклатураипСопутствующиеТовары
                   |ГДЕ
                   |    НоменклатураипСопутствующиеТовары.Ссылка В(&СпНоменеклатура)
                   |    И НЕ НоменклатураипСопутствующиеТовары.Ссылка = &НоменклатураПустая
                   |
                   |ОБЪЕДИНИТЬ ВСЕ
                   |
                   |ВЫБРАТЬ
                   |    НоменклатураипФункциональныеАналоги.Ссылка.Код,
                   |    НоменклатураипФункциональныеАналоги.Номенклатура.Код,
                   |    2
                   |ИЗ
                   |    Справочник.Номенклатура.ипФункциональныеАналоги КАК НоменклатураипФункциональныеАналоги
                   |ГДЕ
                   |    НоменклатураипФункциональныеАналоги.Ссылка В(&СпНоменеклатура)
                   |    И НЕ НоменклатураипФункциональныеАналоги.Номенклатура = &НоменклатураПустая
                   |
                   |ОБЪЕДИНИТЬ ВСЕ
                   |
                   |ВЫБРАТЬ
                   |    НоменклатураипПолныеАналоги.Ссылка.Код,
                   |    НоменклатураипПолныеАналоги.Номенклатура.Код,
                   |    3
                   |ИЗ
                   |    Справочник.Номенклатура.ипПолныеАналоги КАК НоменклатураипПолныеАналоги
                   |ГДЕ
                   |    НоменклатураипПолныеАналоги.Ссылка В(&СпНоменеклатура)
                   |    И НЕ НоменклатураипПолныеАналоги.Номенклатура = &НоменклатураПустая
                   |ИТОГИ ПО
                   |    ТипПривязки,
                   |    ВладелецКод";
    Запрос = Новый Запрос;
    Запрос.Текст = ТекстЗапроса;
    Запрос.УстановитьПараметр("СпНоменеклатура", мсвНоменклатура);
    Запрос.УстановитьПараметр("НоменклатураПустая", Справочники.Номенклатура.ПустаяСсылка());
    ВыборкаТипПривязки = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    ТаблицаПривязки = Новый ТаблицаЗначений;
    ТаблицаПривязки.Колонки.Добавить("product_id", Новый ОписаниеТипов("Число"));
    ТаблицаПривязки.Колонки.Добавить("related_id", Новый ОписаниеТипов("Число"));
    ТаблицаПривязки.Колонки.Добавить("type", Новый ОписаниеТипов("Число"));
    Пока ВыборкаТипПривязки.Следующий() Цикл
        ВыборкаНоменклатура = ВыборкаТипПривязки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
        Пока ВыборкаНоменклатура.Следующий() Цикл
            // выгружаем привязки по текущему товару
            выборка = ВыборкаНоменклатура.Выбрать();
            product_id = ПолучитьProductId(ВыборкаНоменклатура.ВладелецКод, conn, л_файл);
            Если product_id=-1 Тогда
                Продолжить
            КонецЕсли;

            Пока выборка.Следующий() Цикл
                related_id = ПолучитьProductId(выборка.НоменклатураКод, conn, л_файл);
                Если related_id=-1 Тогда
                    Продолжить;
                КонецЕсли;
                стр_ТаблицаПривязки = ТаблицаПривязки.Добавить();
                стр_ТаблицаПривязки.product_id = product_id;
                стр_ТаблицаПривязки.related_id = related_id;
                стр_ТаблицаПривязки.type = ВыборкаТипПривязки.ТипПривязки;

                // ищем привязку в mysql
                мсвПоля = Новый Массив;
                мсвПоля.Добавить("product_id");
                соотвУсловия = Новый Соответствие;
                соотвУсловия.Вставить("product_id", product_id);
                соотвУсловия.Вставить("related_id", related_id);
                соотвУсловия.Вставить("type", выборка.ТипПривязки);
                rows = ВыбратьИз("product_related", мсвПоля, соотвУсловия, conn, л_файл);
                Если rows=Неопределено Тогда
                    СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                    Возврат 0;
                КонецЕсли;
                Если rows=0 Тогда
                    // создаем привязку
                    соотвПоля = Новый Соответствие;
                    соотвПоля.Вставить("product_id", product_id);
                    соотвПоля.Вставить("related_id", related_id);
                    соотвПоля.Вставить("type", выборка.ТипПривязки);
                    rows = ВставитьВ("product_related", соотвПоля, conn, л_файл);
                    Если rows=Неопределено Тогда
                        СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                        Возврат 0;
                    КонецЕсли;
                КонецЕсли;
            КонецЦикла;
        КонецЦикла;
    КонецЦикла;
    // ТаблицаПривязки - содержит все привязки которые есть в 1С, удалим те которые есть MySQL и которых уже нет в 1С
    product_id_lst = "";
    Для л=0 по мсвНоменклатура.Количество()-1 Цикл
        product_id = ПолучитьProductId(мсвНоменклатура[л].Код, conn, л_файл);
        product_id_lst = product_id_lst + ", " + Формат (product_id, "ЧГ=");
    КонецЦикла;
    product_id_lst = Сред (product_id_lst, 3);
    query = "SELECT product_id, related_id, type FROM product_related WHERE product_id IN (%product_id_lst%)";
    query = СтрЗаменить(query, "%product_id_lst%", product_id_lst);
    rows = ВыполнитьЗапрос(query, conn, л_файл);
    Если rows = Неопределено Тогда
        Если rows=Неопределено Тогда
            СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
            Возврат 0;
        КонецЕсли;
    КонецЕсли;
    Если rows<>0 Тогда
        Пока rows.EOF()=0 Цикл
            product_id = rows.Fields.Item("product_id").Value;
            related_id = rows.Fields.Item("related_id").Value;
            type = rows.Fields.Item("type").Value;
            структОтбор = Новый Структура("product_id, related_id, type", product_id, related_id, type);
            НайденныеСтроки = ТаблицаПривязки.НайтиСтроки(структОтбор);
            Если НайденныеСтроки.Количество()=0 Тогда
                // удаляем привязку
                query = "DELETE FROM product_related WHERE product_id=%product_id% AND related_id=%related_id% AND type=%type%";
                query = СтрЗаменить(query, "%product_id%", Формат (product_id, "ЧГ="));
                query = СтрЗаменить(query, "%related_id%", Формат (related_id, "ЧГ="));
                query = СтрЗаменить(query, "%type%", Формат (type, "ЧГ="));
                rows_related = ВыполнитьЗапрос(query, conn, л_файл);
                Если rows_related=Неопределено Тогда
                    СообщитьЛог("Ошибка выполнения запроса", л_файл, СтатусСообщения.ОченьВажное);
                    Возврат 0;
                КонецЕсли;
            КонецЕсли;
            rows.MoveNext();
        КонецЦикла;
    КонецЕсли;
    СкопироватьФайлыНаФтп(тзФайлыККопированию, л_файл);
    // регистрируем  успешное изменение
    Для к=0 По мсвНоменклатура.Количество()-1 Цикл
        ПланыОбмена.УдалитьРегистрациюИзменений(УзелОбменаСайт, мсвНоменклатура[к]);
    КонецЦикла;
    СообщитьЛог("Завершение: Выгрузка прикрепленных файлов. Время выполнения (сек):"+Строка (ТекущаяДата() - Дата_Старт), л_файл);
    СообщитьЛог("------------------------------------------", л_файл);
    Возврат Истина
КонецФункции
